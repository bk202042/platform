{
  "meta": {
    "project": "VinaHome Community Board",
    "version": "1.0.0",
    "date": "2025-07-01",
    "prepared_by": "Generated by TestSprite"
  },
  "product_overview": "VinaHome 커뮤니티 보드는 베트남 내 한국인 거주자를 위한 아파트 단위 지역 소통 플랫폼입니다. 사용자는 동네별 글 작성, 댓글, 좋아요를 통해 지역 정보를 공유할 수 있습니다.",
  "core_goals": [
    "지역별 사용자 생성 콘텐츠를 통해 사용자 유지율 증가",
    "신뢰할 수 있는 지역 기반 정보를 제공하여 임차인 경험 향상",
    "아파트 단위 커뮤니티 성장을 통한 자연스러운 사용자 확대"
  ],
  "key_features": [
    "아파트 단위 지역 기반 게시판 구현 (도시, 아파트별 분류)",
    "카테고리별 글 작성(Q&A, 추천, 중고거래, 자유글) 및 이미지 업로드(최대 5장) 지원",
    "좋아요(1인 1회), 댓글 및 대댓글(스레드형) 기능 제공",
    "7일 내 좋아요 순 상단 고정, 나머지는 최신순 정렬",
    "비회원은 읽기만 가능하며, 글작성/댓글/좋아요는 인증 사용자에 한정",
    "shadcn/ui와 Tailwind CSS 기반 한글 하드코딩 UI, 모바일 우선 반응형 디자인",
    "Supabase Auth 연동 및 Next.js 15 앱 라우터 기반 API 제공"
  ],
  "user_flow_summary": [
    "사용자는 도시 선택 후 아파트를 선택하여 해당 지역 커뮤니티 글 목록을 조회한다.",
    "인증된 사용자는 카테고리를 선택하고 제목, 본문, 이미지와 함께 새 글을 작성한다.",
    "사용자는 글 목록에서 인기글과 최신글을 확인하고, 개별 글 상세 페이지에서 댓글 및 좋아요를 이용할 수 있다.",
    "댓글 및 대댓글 작성이 가능하며, 좋아요는 1인 1회 토글 방식으로 작동한다.",
    "사용자는 언제든지 동네(아파트) 선택을 변경하여 다른 지역 게시판을 탐색한다."
  ],
  "validation_criteria": [
    "모든 API는 인증된 사용자만 글 작성, 댓글 작성, 좋아요 기능 사용 가능 여부 검증",
    "글과 댓글 작성 시 Zod 기반 유효성 검사 수행 및 한글 오류 메시지 제공",
    "커뮤니티 글 목록에서 7일 이내 좋아요 많은 글을 상단 고정하여 표현",
    "댓글 및 대댓글(쓰레드) 기능 정상 동작 확인",
    "이미지 업로드 최대 5장 제한 및 저장소 연동 확인",
    "게스트 사용자는 읽기 전용이며 그 외 상호작용 버튼 비활성화 상태 유지",
    "UI 내 한글 텍스트 및 접근성(aria-label) 적용 여부 점검",
    "테이블 및 API의 관계 무결성 유지 및 적절한 인덱스 적용 여부 확인"
  ],
  "code_summary": {
    "tech_stack": [
      "TypeScript",
      "Next.js",
      "React",
      "Supabase",
      "PostgreSQL",
      "Tailwind CSS",
      "shadcn/ui",
      "Zod"
    ],
    "features": [
      {
        "name": "Authentication",
        "description": "User authentication system using Supabase Auth with Google OAuth",
        "files": [
          "components/providers/AuthProvider.tsx",
          "components/auth/AuthGuard.tsx",
          "components/auth/ProtectedRoute.tsx",
          "lib/auth.ts",
          "middleware.ts"
        ]
      },
      {
        "name": "Community Posts",
        "description": "Community forum functionality for creating and viewing posts",
        "files": [
          "app/community/page.tsx",
          "app/community/[postId]/page.tsx",
          "app/community/_components/NewPostDialog.tsx",
          "app/community/_components/EnhancedNewPostDialog.tsx",
          "app/community/_lib/actions.ts",
          "app/community/_lib/client-actions.ts",
          "components/community/PostList.tsx",
          "components/community/PostCard.tsx",
          "components/community/PostDetail.tsx",
          "lib/data/community.ts",
          "lib/validation/community.ts",
          "app/api/community/posts/route.ts"
        ]
      },
      {
        "name": "Comments",
        "description": "Comment functionality for community posts",
        "files": [
          "components/community/CommentSection.tsx",
          "components/community/CommentActions.tsx",
          "app/api/community/comments/delete/route.ts"
        ]
      },
      {
        "name": "Image Upload",
        "description": "Image upload functionality for community posts",
        "files": [
          "components/community/ImageUpload.tsx",
          "lib/hooks/useSupabaseUpload.ts"
        ]
      },
      {
        "name": "Data Fetching",
        "description": "Data fetching utilities and hooks",
        "files": [
          "lib/hooks/useCommunityData.ts",
          "lib/hooks/useApiCache.ts",
          "lib/hooks/useOptimisticUpdate.ts",
          "lib/hooks/usePostActions.ts",
          "lib/hooks/usePostInteractions.ts"
        ]
      },
      {
        "name": "UI Components",
        "description": "Reusable UI components",
        "files": [
          "components/ui/avatar.tsx",
          "components/community/LikeButton.tsx",
          "components/community/SortSelector.tsx",
          "components/community/CategorySidebar.tsx",
          "components/community/ToastProvider.tsx"
        ]
      },
      {
        "name": "Error Handling",
        "description": "Error handling components and utilities",
        "files": [
          "components/community/ErrorBoundary.tsx",
          "components/community/NetworkError.tsx",
          "components/community/EmptyState.tsx",
          "components/auth/AuthErrorBoundary.tsx"
        ]
      },
      {
        "name": "Database Schema",
        "description": "Supabase database tables and relationships",
        "files": [
          "supabase/migrations"
        ]
      }
    ]
  }
}
