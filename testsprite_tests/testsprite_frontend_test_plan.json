[
  {
    "id": "TC001",
    "title": "Access community board as guest (read-only)",
    "description": "Verify that unauthenticated users can view posts, comments, and like counts but cannot interact (write posts, comments, or like). The interaction buttons should be disabled or hidden.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Open the community board without logging in"
      },
      {
        "type": "assertion",
        "description": "User can view list of posts and their details"
      },
      {
        "type": "assertion",
        "description": "User can scroll and view comments and replies"
      },
      {
        "type": "assertion",
        "description": "Like buttons, post creation, and comment input UI elements are disabled or hidden"
      },
      {
        "type": "assertion",
        "description": "No interaction allowed with posts or comments"
      }
    ]
  },
  {
    "id": "TC002",
    "title": "User login and authentication via Supabase Auth",
    "description": "Verify that users can log in using Supabase Auth with Google OAuth and that authenticated state persists across pages.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to login page"
      },
      {
        "type": "action",
        "description": "Click on Google OAuth login button"
      },
      {
        "type": "assertion",
        "description": "User is redirected and logged in successfully"
      },
      {
        "type": "action",
        "description": "Navigate to community board page"
      },
      {
        "type": "assertion",
        "description": "User authentication status is maintained and user can perform authenticated actions"
      }
    ]
  },
  {
    "id": "TC003",
    "title": "City and apartment selection flow",
    "description": "Ensure the user can select a city and then an apartment, and that the post list updates to show posts for the selected apartment.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to community board main page"
      },
      {
        "type": "action",
        "description": "Select a city from the city selector"
      },
      {
        "type": "assertion",
        "description": "Apartment selector updates to show apartments in selected city"
      },
      {
        "type": "action",
        "description": "Select an apartment from the apartment selector"
      },
      {
        "type": "assertion",
        "description": "Post list reloads and shows posts from selected apartment only"
      }
    ]
  },
  {
    "id": "TC004",
    "title": "Create a new post with valid inputs and images",
    "description": "Verify authenticated users can create a post with a chosen category, title, body, and up to 5 images. The post should appear in the list after creation.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in as an authenticated user"
      },
      {
        "type": "action",
        "description": "Navigate to new post creation dialog/page"
      },
      {
        "type": "action",
        "description": "Select category (e.g., Q&A)"
      },
      {
        "type": "action",
        "description": "Enter valid title and body text"
      },
      {
        "type": "action",
        "description": "Upload between 1 to 5 images"
      },
      {
        "type": "action",
        "description": "Submit the post"
      },
      {
        "type": "assertion",
        "description": "Post is successfully created and listed in the community board"
      },
      {
        "type": "assertion",
        "description": "Images are displayed properly with the post"
      }
    ]
  },
  {
    "id": "TC005",
    "title": "Validation error on new post with invalid data",
    "description": "Verify validation errors are shown with Korean error messages when submitting a post with missing title, category, or body.",
    "category": "error handling",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in as an authenticated user"
      },
      {
        "type": "action",
        "description": "Open new post creation form"
      },
      {
        "type": "action",
        "description": "Leave category unselected, or title/body empty"
      },
      {
        "type": "action",
        "description": "Try to submit the form"
      },
      {
        "type": "assertion",
        "description": "Zod validation triggers showing Korean error messages for each missing or invalid field"
      },
      {
        "type": "assertion",
        "description": "Post is not created"
      }
    ]
  },
  {
    "id": "TC006",
    "title": "Image upload maximum 5 images enforcement",
    "description": "Verify that users cannot upload more than 5 images when creating or editing a post and that proper UI feedback is provided.",
    "category": "error handling",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Log in as authenticated user"
      },
      {
        "type": "action",
        "description": "Open new post creation form"
      },
      {
        "type": "action",
        "description": "Attempt to upload 6 images"
      },
      {
        "type": "assertion",
        "description": "UI prevents uploading more than 5 images or shows validation error"
      },
      {
        "type": "action",
        "description": "Upload exactly 5 images"
      },
      {
        "type": "assertion",
        "description": "Uploading 5 images succeeds"
      }
    ]
  },
  {
    "id": "TC007",
    "title": "Post list ordering with top liked posts fixed for 7 days",
    "description": "Verify posts with the most likes in the past 7 days appear fixed at the top, and the rest are sorted by newest first.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in as authenticated user"
      },
      {
        "type": "action",
        "description": "Create multiple posts with varying likes and timestamps"
      },
      {
        "type": "assertion",
        "description": "Posts with most likes within last 7 days appear fixed on top"
      },
      {
        "type": "assertion",
        "description": "Remaining posts appear sorted by newest first"
      }
    ]
  },
  {
    "id": "TC008",
    "title": "Like functionality toggle and restriction",
    "description": "Verify that authenticated users can like a post only once, can toggle their like, and like counts update accordingly.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in as authenticated user"
      },
      {
        "type": "action",
        "description": "Navigate to a post detail page"
      },
      {
        "type": "action",
        "description": "Click like button once"
      },
      {
        "type": "assertion",
        "description": "Like count increments by 1"
      },
      {
        "type": "action",
        "description": "Click like button again to unlike"
      },
      {
        "type": "assertion",
        "description": "Like count decrements by 1"
      },
      {
        "type": "action",
        "description": "Try liking the same post multiple times rapidly"
      },
      {
        "type": "assertion",
        "description": "System restricts to single like per user and maintains count correctly"
      }
    ]
  },
  {
    "id": "TC009",
    "title": "Create comments and threaded replies",
    "description": "Verify that authenticated users can add comments and multiple levels of replies (threads) on posts, and that they display properly.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Log in as authenticated user"
      },
      {
        "type": "action",
        "description": "Navigate to a post detail page"
      },
      {
        "type": "action",
        "description": "Add a new top-level comment"
      },
      {
        "type": "assertion",
        "description": "Comment appears below post"
      },
      {
        "type": "action",
        "description": "Add a reply to the existing comment"
      },
      {
        "type": "assertion",
        "description": "Reply displays indented below the comment (threaded)"
      },
      {
        "type": "action",
        "description": "Add a reply to the reply to form at least 2 thread levels"
      },
      {
        "type": "assertion",
        "description": "Nested replies display properly in correct thread structure"
      }
    ]
  },
  {
    "id": "TC010",
    "title": "Validation error on comment creation",
    "description": "Verify Korean validation error messages occur when attempting to submit empty or invalid comment content.",
    "category": "error handling",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Log in as authenticated user"
      },
      {
        "type": "action",
        "description": "Navigate to a post detail page"
      },
      {
        "type": "action",
        "description": "Attempt to submit empty comment"
      },
      {
        "type": "assertion",
        "description": "Validation error in Korean is shown"
      },
      {
        "type": "action",
        "description": "Attempt to submit comment exceeding allowed length"
      },
      {
        "type": "assertion",
        "description": "Validation error in Korean is shown"
      }
    ]
  },
  {
    "id": "TC011",
    "title": "API authorization enforcement for post, comment, and like actions",
    "description": "Verify that all API endpoints for creating posts, comments, and likes reject requests from unauthenticated users with appropriate errors.",
    "category": "security",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Send API request to create a post without authentication"
      },
      {
        "type": "assertion",
        "description": "API responds with unauthorized error"
      },
      {
        "type": "action",
        "description": "Send API request to create comment without authentication"
      },
      {
        "type": "assertion",
        "description": "API responds with unauthorized error"
      },
      {
        "type": "action",
        "description": "Send API request to like a post without authentication"
      },
      {
        "type": "assertion",
        "description": "API responds with unauthorized error"
      }
    ]
  },
  {
    "id": "TC012",
    "title": "UI accessibility and Korean text validation",
    "description": "Verify that all user-facing UI elements show hardcoded Korean text as expected and include correct aria-label attributes for accessibility.",
    "category": "ui",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Navigate to various pages: community board, post detail, new post form"
      },
      {
        "type": "assertion",
        "description": "All UI text is displayed in Korean, no placeholder or untranslated text present"
      },
      {
        "type": "assertion",
        "description": "Key interactive elements have appropriate aria-label attributes for screen readers"
      }
    ]
  },
  {
    "id": "TC013",
    "title": "Switching community location changes posts accordingly",
    "description": "Verify that changing the selected city and/or apartment dynamically reloads the post list to reflect the chosen community area.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Select a particular city and apartment"
      },
      {
        "type": "assertion",
        "description": "Post list shows posts exclusive to that community"
      },
      {
        "type": "action",
        "description": "Change city or apartment selection to a different location"
      },
      {
        "type": "assertion",
        "description": "Post list refreshes and shows posts for the new location"
      }
    ]
  },
  {
    "id": "TC014",
    "title": "Database integrity and relationships consistency",
    "description": "Verify that database tables maintain integrity and proper relationships between posts, comments, likes, users, and images with enforced indexes.",
    "category": "functional",
    "priority": "High",
    "steps": [
      {
        "type": "action",
        "description": "Create posts with comments and likes via UI"
      },
      {
        "type": "assertion",
        "description": "Database records show correct foreign key relationships"
      },
      {
        "type": "assertion",
        "description": "Deleting a post cascades deletes comments and likes as expected"
      },
      {
        "type": "action",
        "description": "Query database indexes used for filtering by city, apartment, and created_at"
      },
      {
        "type": "assertion",
        "description": "Indexes are applied appropriately for query performance"
      }
    ]
  },
  {
    "id": "TC015",
    "title": "Image upload storage integration and persistence",
    "description": "Verify that images uploaded to posts are correctly stored using Supabase storage backend and persist across page refreshes.",
    "category": "functional",
    "priority": "Medium",
    "steps": [
      {
        "type": "action",
        "description": "Log in and create a post with image uploads"
      },
      {
        "type": "action",
        "description": "Check that images are uploaded to Supabase storage with correct URLs"
      },
      {
        "type": "assertion",
        "description": "Images persist and display correctly in post detail after page reload"
      }
    ]
  }
]
