---
description: 
globs: **/*.{js,ts,jsx,tsx,mdx,css}
alwaysApply: false
---
# Tailwind CSS v4.1 Guide

This guide covers the core concepts and updates for Tailwind CSS v4.1, focusing on the transition from v3.x and the new features introduced in v4.0 and v4.1.

## Core v4.0 Changes

- **CSS-first configuration**: Configuration is primarily done in CSS using the `@theme` directive instead of `tailwind.config.js`.
  ```css
  @import "tailwindcss";

  @theme {
    --font-display: "Satoshi", "sans-serif";
    --breakpoint-3xl: 1920px;
    --color-avocado-500: oklch(0.84 0.18 117.33);
    --ease-fluid: cubic-bezier(0.3, 0, 0, 1);
  }
  ```
- Legacy `tailwind.config.js` files can still be imported using `@config`:
  ```css
  @import "tailwindcss";
  @config "../../tailwind.config.js";
  ```
- **CSS import syntax**: Use `@import "tailwindcss";` instead of the old `@tailwind` directives (`@tailwind base; @tailwind components; @tailwind utilities;`).
- **Package changes**:
  - PostCSS plugin: `@tailwindcss/postcss` (was `tailwindcss`)
  - CLI: `@tailwindcss/cli`
  - Vite plugin: `@tailwindcss/vite`
  - `postcss-import` and `autoprefixer` are no longer needed.
- **Native CSS cascade layers**: Uses real CSS `@layer` for better compatibility and predictability.

## Theme Configuration (v4.0+)

- **CSS theme variables**: All design tokens are CSS variables (e.g., `--color-blue-500`, `--font-sans`). Access with `var(--color-blue-500)`.
- **Simplified theme**: Many utilities (e.g., `grid-cols-12`, `z-40`, `opacity-70`, data attributes) work without explicit theme configuration.
- **Dynamic spacing scale**: Derived from `--spacing` (default `0.25rem`). Any multiple works (e.g., `mt-21`).
- **Overriding theme**: Override namespaces (`--font-*: initial;`) or the entire theme (`--*: initial;`).

## New Features in v4.0

- **Container query support**: Built-in, no plugin needed.
- **3D transforms**: `transform-3d`, `rotate-x-*`, `rotate-y-*`, `rotate-z-*`, `scale-z-*`, `translate-z-*`, `perspective-*`, `backface-visible/hidden`.
- **Gradient enhancements**: `bg-linear-45`, `bg-linear-to-r/oklch`, `bg-linear-to-r/srgb`, `bg-conic`, `bg-radial-[at_25%_25%]`.
- **Shadow enhancements**: `inset-shadow-*` and `inset-ring-*`.
- **New CSS property utilities**: `field-sizing-content`, `scheme-light/dark`, `font-stretch-*`.

## New Variants in v4.0

- **Composable variants**: Chain variants (e.g., `group-has-data-potato:opacity-100`).
- **New variants**: `starting`, `not-*`, `inert`, `nth-*`, `in-*`, `open`, `**`.

## Tailwind CSS v4.1 Updates

This section highlights the key features and improvements introduced in Tailwind CSS v4.1.

### `text-shadow-*` Utilities
- Added utilities for applying text shadows (`text-shadow-2xs` to `text-shadow-lg`).
- Supports color customization using `text-shadow-<color>` (e.g., `text-shadow-blue-500`).
- Supports opacity modification using a slash modifier (e.g., `text-shadow-lg/50`).
  ```html
  <p class="text-shadow-md text-shadow-blue-500/50">Text with shadow</p>
  ```

### `mask-*` Utilities
- Introduced composable utilities for element masking using images and gradients (`mask-image`, `mask-mode`, `mask-repeat`, `mask-position`, `mask-clip`, `mask-origin`, `mask-size`, `mask-type`).
- Specific utilities for linear (`mask-linear-*`, `mask-t-from-*`, `mask-r-to-*`, etc.), radial (`mask-radial-*`), and conic (`mask-conic-*`) gradient masks.
  ```html
  <!-- Example: Bottom fade + radial mask -->
  <div class="mask-b-from-50% mask-radial-[50%_90%] mask-radial-from-80% ..."></div>
  ```

### Improved Browser Compatibility
- Enhanced fallbacks for older browsers (like Safari 15):
  - `oklab` colors now render correctly.
  - Features depending on `@property` (shadows, transforms, gradients) work better.
  - Colors with opacity modifiers have inlined fallbacks.
  - Gradients with specific interpolation methods fall back gracefully.
- Note: v4 is still designed for modern browsers (Safari 16.4+), but usability in older ones is improved.

### `overflow-wrap` Utilities
- Control text wrapping with `wrap-normal`, `wrap-break-word`, and `wrap-anywhere`.
- `wrap-break-word`: Breaks long words only if they don't fit.
- `wrap-anywhere`: Allows breaks anywhere, useful in flex containers to prevent overflow without `min-width: 0`.
  ```html
  <p class="wrap-anywhere">pneumonoultramicroscopicsilicovolcanoconiosis</p>
  ```

### Colored `drop-shadow` Support
- Added color support to `drop-shadow` utilities using `drop-shadow-<color>`.
- Opacity modifiers are also supported (e.g., `drop-shadow-xl drop-shadow-indigo-500/50`).
  ```html
  <svg class="fill-indigo-500 drop-shadow-xl drop-shadow-indigo-500/50 ..."></svg>
  ```

### Input Device Targeting (`pointer-*`, `any-pointer-*`)
- `pointer-fine`: Targets precise pointing devices (mouse, trackpad).
- `pointer-coarse`: Targets low-precision devices (touchscreen).
- `any-pointer-*`: Checks if *any* available input device matches (e.g., laptop with touchscreen + mouse).
  ```html
  <button class="p-2 pointer-coarse:p-4">Larger on Touch</button>
  ```

### Last Baseline Alignment
- Align flex or grid items to the baseline of the *last* line of text.
- `items-baseline-last`: Applies to all items in the container.
- `self-baseline-last`: Applies to a single item.

### `safe` Alignment Utilities
- Prevent centered content from overflowing in both directions in constrained flex/grid containers.
- Automatically switches alignment to `start` when overflow occurs.
- Examples: `justify-center-safe`, `items-center-safe`, `content-center-safe`, `self-center-safe`.
  ```html
  <ul class="flex justify-center-safe gap-2 ...">...</ul>
  ```

### `@source not` Directive
- Exclude specific directories or files from Tailwind's class scanning process. Useful for ignoring large, irrelevant folders (e.g., `node_modules` if not automatically ignored, legacy code).
  ```css
  @import "tailwindcss";
  @source not "./src/components/legacy/**/*.js";
  ```

### `@source inline(...)` Directive
- Explicitly include specific class names that might not be present in scanned files (replaces v3 `safelist`).
- Supports brace expansion for generating multiple classes/variants efficiently.
- Can be combined with `not` to prevent specific classes from being generated even if detected.
  ```css
  @import "tailwindcss";
  @source inline("underline"); /* Ensure .underline is generated */
  @source inline("{focus:,hover:,}text-red-{500,600,700}"); /* Generate focus/hover variants for specific red text colors */
  @source not inline("container"); /* Prevent .container generation */
  ```

### Other New Variants
- `details-content`: Targets the content container generated by a `<details>` element.
- `inverted-colors`: Applies styles when the OS high contrast "Invert Colors" mode is enabled.
- `noscript`: Applies styles when JavaScript is disabled in the browser.
- `user-valid` / `user-invalid`: Apply form validation styles based on `:user-valid` and `:user-invalid` pseudo-classes, which typically trigger only after user interaction.

## Custom Extensions (v4.0+)

- **Custom utilities**:
  ```css
  @utility tab-4 {
    tab-size: 4;
  }
  ```
- **Custom variants**:
  ```css
  @variant pointer-coarse (@media (pointer: coarse));
  @variant theme-midnight (&:where([data-theme="midnight"] *));
  ```
- **Plugins**:
  ```css
  @plugin "@tailwindcss/typography";
  ```

## Breaking Changes (v4.0)

- **Removed deprecated utilities**: `bg-opacity-*`, `text-opacity-*`, `border-opacity-*`, `divide-opacity-*`. Use the `/` modifier instead (e.g., `bg-black/50`).
- **Renamed utilities**: `shadow-sm` → `shadow-xs`, `drop-shadow-sm` → `drop-shadow-xs`, `blur-sm` → `blur-xs`, `rounded-sm` → `rounded-xs`, `outline-none` → `outline-hidden`.
- **Default style changes**: Adjustments to default border color, ring width, and hover styles.
- **Syntax changes**: CSS variables in arbitrary values require `var()`, stacked variants apply left-to-right.

## Advanced Configuration (v4.0+)

- **Using a prefix**: `@import "tailwindcss" prefix(tw);`
- **Source detection**:
  - `@source "../node_modules/@my-company/ui-lib";` (Include paths)
  - `@source not "./src/legacy";` (Exclude paths - v4.1)
  - `@source inline("...");` (Safelist utilities - v4.1, replaces v3 `safelist`)
- **Legacy config files**: `@config "../../tailwind.config.js";`
- **Dark mode configuration**:
  ```css
  @import "tailwindcss";
  /* Example: Class-based dark mode */
  @variant dark (&:where(.dark *));
  ```
- **Container customization**:
  ```css
  @utility container {
    /* Example: Centered container with padding */
    margin-inline: auto;
    padding-inline: 2rem;
    max-width: theme(var(--breakpoint-lg)); /* Example using theme variable */
  }


